buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
//        google()
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
//apply plugin:'java'
//apply plugin: 'com.google.gms.google-services'

repositories {
    maven { url 'https://dl.bintray.com/drummer-aidan/maven' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    aaptOptions {
        cruncherEnabled = false
    }

    defaultConfig {
        applicationId "com.tama.chat"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true
        resConfigs "auto"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

//     before release need to enable Crashlytics

    signingConfigs {
        debug {

        }
        release {
            storeFile file(property('prodStoreFile'))
            storePassword property('prodStorePassword')
            keyAlias property('prodKeyAlias')
            keyPassword property('prodKeyPassword')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.enableCrashlytics = true
//            signingConfig signingConfigs.release
            buildConfigField "String", "APP_ID", property('prodAppID')
            buildConfigField "String", "AUTH_KEY", property('prodAuthKey')
            buildConfigField "String", "AUTH_SECRET", property('prodAuthSecret')
            buildConfigField "String", "ACCOUNT_KEY", property('prodAccountKey')
            buildConfigField "String", "TWITTER_KEY", prodTwitterDigitsConsumerKey
            buildConfigField "String", "TWITTER_SECRET", prodTwitterDigitsConsumerSecret
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", property('prodFirebaseAuthProjectId')
            buildConfigField "String", "GOOGLE_API_KEY", property('prodGoogleApiKey')
            buildConfigField "String", "PUSH_REGISTRATION_APP_ID", property('prodPushRegistrationAppID')
            resValue "string", "twitterDigitsApiKey", property('prodTwittedDigitsApiKey')
            resValue "string", "facebookAppId", property('prodFacebookAppID')
            resValue "string", "sender_id", property('prodPushRegistrationAppID')
        }
        debug {
            debuggable true
            ext.enableCrashlytics = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix ' (debug)'
            buildConfigField "String", "APP_ID", property('devAppID')
            buildConfigField "String", "AUTH_KEY", property('devAuthKey')
            buildConfigField "String", "AUTH_SECRET", property('devAuthSecret')
            buildConfigField "String", "ACCOUNT_KEY", property('devAccountKey')
            buildConfigField "String", "TWITTER_KEY", property('devTwitterDigitsConsumerKey')
            buildConfigField "String", "TWITTER_SECRET", property('devTwitterDigitsConsumerSecret')
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", property('devFirebaseAuthProjectId')
            buildConfigField "String", "GOOGLE_API_KEY", property('devGoogleApiKey')
            buildConfigField "String", "PUSH_REGISTRATION_APP_ID", property('devPushRegistrationAppID')
            resValue "string", "twitterDigitsApiKey", property('devTwittedDigitsApiKey')
            resValue "string", "facebookAppId", property('devFacebookAppID')
            resValue "string", "sender_id", property('devPushRegistrationAppID')
        }

    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        changeApkFileName(variant)
    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = "${variant.name}-${variant.versionName}.apk"
//        }
//    }

    productFlavors {

        dev {
            buildConfigField "String", "APP_ID", devAppID
            buildConfigField "String", "AUTH_KEY", devAuthKey
            buildConfigField "String", "AUTH_SECRET", devAuthSecret
        }
    }

    buildToolsVersion '26.0.2'
}

def qbSdkVersion = '3.3.5'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //    compile project(path: ':libraryNew')
    repositories {
        mavenCentral() // jcenter() works as well because it pulls from Maven Central
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true;
    }
    compile project(':Q-municate_core')
    compile "com.android.support:multidex:${rootProject.multiDexVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.supportVersion}"
    compile "com.android.support:design:${rootProject.supportVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.supportVersion}"
    compile "com.android.support:support-v4:${rootProject.supportVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.supportVersion}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    //    compile "com.google.android.gms:play-services:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-base:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-gcm:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-maps:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-location:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-analytics:${rootProject.googlePlayServicesVersion}"
    compile "com.firebase:firebase-jobdispatcher-with-gcm-dep:${rootProject.firebaseDispatcherVersion}"
    compile "com.google.firebase:firebase-auth:${rootProject.firebaseAuthVersion}"
    compile "com.firebaseui:firebase-ui-auth:${rootProject.firebaseUiAuthVersion}"
    compile "com.google.firebase:firebase-messaging:${rootProject.firebaseVersion}"
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.googlecode.libphonenumber:libphonenumber:6.2'
    compile "com.jakewharton:butterknife:${rootProject.butterknifeVersion}"
    compile "com.soundcloud.android:android-crop:${rootProject.cropVersion}@aar"
    compile "com.github.orangegangsters:swipy:${rootProject.swipyRecyclerviewVersion}@aar"
    compile "com.timehop.stickyheadersrecyclerview:library:${rootProject.stickylistheadersRecyclerViewVersion}@aar"
    compile "com.rockerhieu.emojicon:library:${rootProject.emojiconVersion}"
    compile "com.nostra13.universalimageloader:universal-image-loader:${rootProject.universalImageLoaderVersion}"
    compile "com.afollestad.material-dialogs:core:${rootProject.materialDialogsVersion}"
    //    compile('com.github.afollestad.material-dialogs:core:0.8.5.8@aar') {

    //        transitive = true

    //    }
    compile("com.android.support:cardview-v7:${rootProject.supportVersion}") {
        force = true
    }
    compile project(path: ':q-municate_user_service')
    compile project(path: ':q-municate_auth_service')
    compile project(path: ':q-municate_user_cache')
    compile 'com.flurry.android:analytics:6.2.0'
    testCompile 'junit:junit:4.12'
}

def changeApkFileName(variant) {
    variant.outputs.each { output ->
        def file = output.outputFile
        def newName = 'Tama_Android_v.' + rootProject.versionName + '_c.' + rootProject.versionCode + '-' + variant.buildType.name + '.apk'
        output.outputFile = new File(file.parent, newName)
//        outputFileName ='Tama_Android_v.'+"-${variant.versionName}"+"${variant.name}"+".apk"
    }

}


crashlytics {
    enableNdk false
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

apply plugin: 'com.google.gms.google-services'
